# include the general include file which contains the functions
source lib/include.tcl

puts "TESTING: Language Frontends"

# Timeout reduced to 3 seconds
set timeout 3

#cd into the test dir such that output files are placed here.
cd $subdir

# Language Tools
# --------------
#set ltools(spinjal) "fgs.promela"
#set ltools(mcrl) "-tbf -regular -nocluster hef_wrong.mcrl"
#set ltools(mvrl22lps) "-n -D ieee_11073.mcrl2 > ieee_11073.lps"

# Language Frontends
set frontends(etf) "gear.1.etf"
set frontends(dve) "gear.1.dve"
set frontends(prom) "fgs.promela.spinja"
set frontends(lpo) "hef_wrong.tbf"
set frontends(lps) "ieee-11073.lps"
set frontends(opaal) "fischer5.xml"
set frontends(pbes) "brp-nodeadlock.pbes"

set backends "mc,dist,sym,seq"
set filter "*2lts-{$backends}"
set be_filter "{mc}"
set EXAMPLES_PATH "../../examples"



proc find_bins_by_filter { filter } {
    set frontends [list]
    set lts_backends [glob -directory "../../src" -type d pins2lts* ]
    foreach dir $lts_backends {
        set lts_bins [glob -nocomplain -directory $dir -type f $filter]
        foreach path $lts_bins {
            lappend frontends $path
        }
    }

    return $frontends
}

set lang_fe [ find_lang_frontends $filter]

foreach path $lang_fe {
    set testcounter 1
    set tokens [split $path "/"]
    set command [lindex $tokens end]
    set frontend [lindex [split $command "2"] 0]
    if { [info exists frontends($frontend)] } {
        set param $frontends($frontend)
        #runmytest "test$testcounter" "$path $EXAMPLES_PATH/$param" 
    } else {
        puts "No test defined for $command"
    }
}

cd ".."
