_ltsmin_opts=""

declare EXTENSIONS_dve="dve|dve2C"
declare EXTENSIONS_etf="etf"
declare EXTENSIONS_lps="lps"
declare EXTENSIONS_lpo="tbf"
declare EXTENSIONS_prom="prom|pr|promela|spin|spins|"
declare EXTENSIONS_mapa="prcrl|mapa"
declare EXTENSIONS_opaal="so|xml"

declare FILE_FORMATS="dir|dz|gcf|bcg|gcd|vac|aut|fsm|tra|lab|pg"

declare MODULES="dve etf lps lpo mapa opaal prom"

declare BASIC_OPTS="--deadlock -d --action -a --invariant -i --no-exit -n  --trace"

declare DIST_OPTS="$BASIC_OPTS --filter --nice"
declare MC_OPTS="$BASIC_OPTS --filter --size -s --state --strategy --max \
                 --proviso --strict --perm --zobrist -z --ratio"
declare SEQ_OPTS="$BASIC_OPTS --state --strategy --proviso --max"
declare SYM_OPTS="$BASIC_OPTS --order --saturation --sat-granularity \
                  --save-sat-levels --guidance --mu --ctl-star --pg-solve \
                  --pg-write"

declare MC_HIDDEN="--all-ecd --nar --no-red-perm --no-ref --no-ecd --gran \
                   --handoff --owcty-reset" #unused

declare PG_OPTS="--chaining-attractor --saturating-attractor --pg-swap"
declare LTL_OPTS="--ltl-semantics --ltl"
declare IO_OPTS="--block-size --cluster-size"
declare DEV_OPTS="--grey"
declare GREY_OPTS="--matrix -m --labels --cache -c --regroup -r --por -p"
declare RUNTIME_OPTS="-v -q --debug --version --help -h --usage --states --when --where"

declare BUDDY_OPTS="--cache-ratio --max-increase --min-free-nodes --fdd-bits --fdd-reorder"
declare SYLVAN_OPTS="--sylvan-threads --sylvan-dqsize --sylvan-bits --sylvan-tablesize --sylvan-cachesize --sylvan-granularity"
declare LDD_OPTS="--ldd-step"

getExt ()
{
    local MODULE="$1"
    MODULE="${MODULE%-*}"
    MODULE="${MODULE/2lts/}"
    local EXT="EXTENSIONS_$MODULE"
    echo "${!EXT}"
}

_ltsmin_set_reply ()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"
    _ltsmin_opts="$1"
    COMPREPLY=( $(compgen -W "$_ltsmin_opts" -- ${cur}) )
}

_ltsmin_append_reply ()
{
    _ltsmin_set_reply "$_ltsmin_opts $1"
}

_ltsmin_has_input_file ()
{
	local i ext c=1 f=0
	
	IFS_OLD=$IFS
    IFS="|"
	
	while [ $c -lt $COMP_CWORD ]; do
		i="${COMP_WORDS[c]}"
        for ext in $1
        do 
            if [ ${i##*.} = $ext ]
            then
                if [ -e $i ]; then
                    IFS=$IFS_OLD
                    return 1;
                fi
            fi
        done
        

		c=$((++c))
    done

    IFS=$IFS_OLD
    return 0
}

_ltsmin_set_reply_file_ext ()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -f -X '!*.@('$1')' -- "${cur}") )
}

_ltsmin_ltl_opts ()
{
    local prev
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_append_reply "$LTL_OPTS"

    if [[ $prev == '--ltl-semantics' ]]; then
        _ltsmin_set_reply "spin textbook ltsmin"
        return 0
    fi

    return 1
}

_ltsmin_io_opts ()
{
    local prev
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_append_reply "$IO_OPTS"

    if [[ $prev == '--block-size' ]]; then
        _ltsmin_set_reply "32768"
        return 0
    fi
    if [[ $prev == '--cluster-size' ]]; then
        _ltsmin_set_reply "32"
        return 0
    fi


    return 1
}

_ltsmin_runtime_opts ()
{
    _ltsmin_append_reply "$RUNTIME_OPTS"
    return 1
}

_ltsmin_greybox_opts ()
{
    _ltsmin_append_reply "$GREY_OPTS"

    if [[ $prev == '--regroup' || $prev == '-r' ]]; then
        _ltsmin_set_reply 'gs ga gsa gc gr cs cn cw ca csa rs rn ru'
        return 0
    fi

    return 1
}

_ltsmin_buddy_opts ()
{
    _ltsmin_append_reply "$BUDDY_OPTS"

    if [[ $prev == '--cache-ratio' ]]; then
        _ltsmin_set_reply '64'
        return 0
    fi
    if [[ $prev == '--max-increase' ]]; then
        _ltsmin_set_reply '1000000'
        return 0
    fi
    if [[ $prev == '--min-free-nodes' ]]; then
        _ltsmin_set_reply '20'
        return 0
    fi
    if [[ $prev == '--fdd-bits' ]]; then
        _ltsmin_set_reply '16'
        return 0
    fi
    if [[ $prev == '--fdd-reorder' ]]; then
        _ltsmin_set_reply 'none win2 win2ite win3 win3ite sift siftite random'
        return 0
    fi

    return 1
}

_ltsmin_ldd_opts ()
{
    _ltsmin_append_reply "$LDD_OPTS"

    if [[ $prev == '--ldd-step' ]]; then
        _ltsmin_set_reply '30'
        return 0
    fi
    
    return 1
}

_ltsmin_sylvan_opts ()
{
    _ltsmin_append_reply "$SYLVAN_OPTS"

    if [[ $prev == '--sylvan-threads' ]]; then
        _ltsmin_set_reply '1'
        return 0
    fi
    if [[ $prev == '--sylvan-dqsize' ]]; then
        _ltsmin_set_reply '100000'
        return 0
    fi
    if [[ $prev == '--sylvan-bits' ]]; then
        _ltsmin_set_reply '16'
        return 0
    fi
    if [[ $prev == '--sylvan-tablesize' ]]; then
        _ltsmin_set_reply '23'
        return 0
    fi
    if [[ $prev == '--sylvan-cachesize' ]]; then
        _ltsmin_set_reply '23'
        return 0
    fi
    if [[ $prev == '--sylvan-granularity' ]]; then
        _ltsmin_set_reply '1'
        return 0
    fi

    return 1
}

_ltsmin_pg_opts ()
{
    _ltsmin_append_reply "$PG_OPTS"
    return 1
}

_ltsmin_vset_opts ()
{
    _ltsmin_ldd_opts && return 0
    _ltsmin_buddy_opts && return 0
    _ltsmin_sylvan_opts && return 0
    _ltsmin_append_reply "--vset"

    if [[ $prev == '--vset' ]]; then
        _ltsmin_set_reply "ldd ldd64 list tree fdd ddd sylvan"
        return 0
    fi

    return 1
}

_ltsmin_development_opts ()
{
    _ltsmin_append_reply "$DEV_OPTS"
    return 1
}

_ltsmin-printtrace () 
{
    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_set_reply "--csv-separator -s --values --table -t --list -l --all -a --diff -d"
    _ltsmin_runtime_opts && return 0
    _ltsmin_io_opts && return 0

    if [[ $prev == '--csv-separator' || $prev == '-s' ]]; then
        _ltsmin_set_reply '\",\"'
        return 0
    fi
    if [[ $prev == '--values' ]]; then
        _ltsmin_set_reply "idx name"
        return 0
    fi

    if [[ ${cur} == -* ]] ; then
        return 0
    fi

    _ltsmin_set_reply_file_ext "$FILE_FORMATS"
    _ltsmin_has_input_file "$FILE_FORMATS" && return 0
    _ltsmin_set_reply_file_ext "txt|csv|aux"

    return 1
}

_spec2lts-dist()
{
    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_runtime_opts && return 0
    _ltsmin_io_opts && return 0
    _ltsmin_ltl_opts && return 0
    _ltsmin_greybox_opts && return 0
    _ltsmin_development_opts && return 0

    _ltsmin_append_reply "$DIST_OPTS"

    if [[ $prev == '--trace' ]]; then
        _ltsmin_set_reply_file_ext "$FILE_FORMATS"
        return 0
    fi

    if [[ ${cur} == -* ]] ; then
        return 0
    fi

    return 1
}

_2lts-dist ()
{
    EXT=`getExt $1`
    _ltsmin_set_reply ""
    _spec2lts-dist && return 0
    _ltsmin_set_reply_file_ext $EXT
    _ltsmin_has_input_file $EXT && return 0
    _ltsmin_set_reply_file_ext "$FILE_FORMATS"
    return 1
}

_spec2lts-mc()
{
    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_runtime_opts && return 0
    _ltsmin_io_opts && return 0
    _ltsmin_ltl_opts && return 0
    _ltsmin_greybox_opts && return 0
    _ltsmin_development_opts && return 0

    _ltsmin_append_reply "$MC_OPTS"

    if [[ $prev == '--trace' ]]; then
        _ltsmin_set_reply_file_ext "$FILE_FORMATS"
        return 0
    fi
    if [[ $prev == '--state' ]]; then
        _ltsmin_set_reply "table tree cleary-tree"
        return 0
    fi
    if [[ $prev == '--trace' ]]; then
        _ltsmin_set_reply_file_ext "dir|dz|gcf"
        return 0
    fi
    if [[ $prev == '--strategy' ]]; then
        _ltsmin_set_reply "bfs sbfs dfs ndfs cndfs lndfs endfs endfs,lndfs endfs,endfs,ndfs"
        return 0
    fi
    if [[ $prev == '--proviso' ]]; then
        _ltsmin_set_reply "closedset stack"
        return 0
    fi
    if [[ $prev == '--perm' ]]; then
        _ltsmin_set_reply "dynamic random rr sort sr shift shiftall otf none"
        return 0
    fi

    if [[ ${cur} == -* ]] ; then
        return 0
    fi

    return 1
}

_2lts-mc ()
{
    EXT=`getExt $1`
    _ltsmin_set_reply ""
    _spec2lts-mc && return 0
    _ltsmin_set_reply_file_ext $EXT
    _ltsmin_has_input_file $EXT && return 0
    _ltsmin_set_reply_file_ext "$FILE_FORMATS"
    return 1
}

_spec2lts-seq()
{
    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_runtime_opts && return 0
    _ltsmin_io_opts && return 0
    _ltsmin_greybox_opts && return 0
    _ltsmin_vset_opts && return 0
    _ltsmin_development_opts && return 0
    _ltsmin_ltl_opts && return 0

    _ltsmin_append_reply "$SEQ_OPTS"

    if [[ $prev == '--state' ]]; then
        _ltsmin_set_reply "table tree vset"
        return 0
    fi
    if [[ $prev == '--trace' ]]; then
        _ltsmin_set_reply_file_ext "$FILE_FORMATS"
        return 0
    fi
    if [[ $prev == '--strategy' ]]; then
        _ltsmin_set_reply "bfs dfs scc"
        return 0
    fi
    if [[ $prev == '--proviso' ]]; then
        _ltsmin_set_reply "closedset stack color"
        return 0
    fi
    if [[ $prev == '--max' ]]; then
        _ltsmin_set_reply ""
        return 0
    fi

    if [[ ${cur} == -* ]] ; then
        return 0
    fi

    return 1
}

_2lts-seq ()
{
    EXT=`getExt $1`
    _ltsmin_set_reply ""
    _spec2lts-seq && return 0
    _ltsmin_set_reply_file_ext $EXT
    _ltsmin_has_input_file $EXT && return 0
    _ltsmin_set_reply_file_ext "$FILE_FORMATS"
    return 1
}

_spec2lts-sym()
{
    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _ltsmin_runtime_opts && return 0
    _ltsmin_io_opts && return 0
    _ltsmin_greybox_opts && return 0
    _ltsmin_vset_opts && return 0
    _ltsmin_pg_opts && return 0

    _ltsmin_append_reply "$SYM_OPTS"

    if [[ $prev == '--order' ]]; then
        _ltsmin_set_reply "bfs-prev bfs chain-prev chain"
        return 0
    fi
    if [[ $prev == '--saturation' ]]; then
        _ltsmin_set_reply "none sat-like sat-loop sat-fix sat"
        return 0
    fi
    if [[ $prev == '--guidance' ]]; then
        _ltsmin_set_reply "unguided directed"
        return 0
    fi
    if [[ $prev == '--trace' ]]; then
        _ltsmin_set_reply_file_ext $FILE_FORMATS
        return 0
    fi
    if [[ $prev == '--mu' ]]; then
        _ltsmin_set_reply_file_ext "mu"
        return 0
    fi
    if [[ $prev == '--ctl-star' ]]; then
        _ltsmin_set_reply_file_ext "ctl"
        return 0
    fi
    if [[ $prev == '--pg-write' ]]; then
        _ltsmin_set_reply_file_ext "spg"
        return 0
    fi

    if [[ ${cur} == -* ]] ; then
        return 0
    fi

    return 1
}

_2lts-sym ()
{
    EXT=`getExt $1`
    _ltsmin_set_reply ""
    _spec2lts-sym && return 0
    _ltsmin_set_reply_file_ext $EXT
    _ltsmin_has_input_file $EXT && return 0
    _ltsmin_set_reply_file_ext "etf"
    return 1
}

shopt -s extglob

complete -F _ltsmin-printtrace ltsmin-printtrace

for module in $MODULES; do
    complete -F _2lts-dist "${module}2lts-dist"
done

for module in $MODULES; do
    complete -F _2lts-mc "${module}2lts-mc"
done

for module in $MODULES; do
    complete -F _2lts-seq "${module}2lts-seq"
done

for module in $MODULES; do
    complete -F _2lts-sym "${module}2lts-sym"
done

